const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function findSuspiciousData() {
  try {
    console.log('ЁЯФН р╕Др╣Йр╕Щр╕лр╕▓р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕Щр╣Ир╕▓р╕кр╕Зр╕кр╕▒р╕в...\n');
    
    // 1. р╕лр╕▓р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕бр╕╡ assetCode р╣Ар╕Ыр╣Зр╕Щ #1, #2, #3 р╕пр╕ер╕п (р╕Щр╣Ир╕▓р╕Ир╕░р╣Ар╕Ыр╣Зр╕Щ test data)
    const hashAssets = await prisma.asset.findMany({
      where: {
        assetCode: {
          startsWith: '#'
        }
      },
      select: {
        id: true,
        name: true,
        code: true,
        assetCode: true,
        category: true
      }
    });
    
    console.log(`ЁЯОп р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕бр╕╡ assetCode р╕Вр╕╢р╣Йр╕Щр╕Хр╣Йр╕Щр╕Фр╣Йр╕зр╕в "#": ${hashAssets.length} р╕гр╕▓р╕вр╕Бр╕▓р╕г`);
    console.log('(р╕Щр╣Ир╕▓р╕Ир╕░р╣Ар╕Ыр╣Зр╕Щ test data р╕лр╕гр╕╖р╕нр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕│р╕ер╕нр╕З)\n');
    
    if (hashAssets.length > 0) {
      console.log('ЁЯУЛ р╕гр╕▓р╕вр╕Бр╕▓р╕гр╕Чр╕╡р╣Ир╕Щр╣Ир╕▓р╕кр╕Зр╕кр╕▒р╕в:');
      hashAssets.slice(0, 10).forEach((asset, index) => {
        console.log(`${index + 1}. ${asset.name} (${asset.assetCode}) - ${asset.category}`);
      });
      
      if (hashAssets.length > 10) {
        console.log(`... р╣Бр╕ер╕░р╕нр╕╡р╕Б ${hashAssets.length - 10} р╕гр╕▓р╕вр╕Бр╕▓р╕г\n`);
      }
      
      // р╕кр╕гр╣Йр╕▓р╕Зр╕кр╕Др╕гр╕┤р╕Ыр╕Хр╣Мр╣Ар╕Юр╕╖р╣Ир╕нр╕ер╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕лр╕ер╣Ир╕▓р╕Щр╕╡р╣Й
      console.log('ЁЯТб р╕Др╕│р╣Бр╕Щр╕░р╕Щр╕│: р╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕лр╕ер╣Ир╕▓р╕Щр╕╡р╣Йр╕Щр╣Ир╕▓р╕Ир╕░р╣Ар╕Ыр╣Зр╕Щ test data');
      console.log('ЁЯЧСя╕П р╕кр╕▓р╕бр╕▓р╕гр╕Цр╕ер╕Ър╣Др╕Фр╣Йр╣Ар╕Юр╕╖р╣Ир╕нр╣Гр╕лр╣Йр╣Ар╕лр╕ер╕╖р╕н 204 р╕гр╕▓р╕вр╕Бр╕▓р╕г');
      
      const remainingAfterDelete = 225 - hashAssets.length;
      console.log(`ЁЯУК р╕лр╕▓р╕Бр╕ер╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕лр╕ер╣Ир╕▓р╕Щр╕╡р╣Йр╕Ир╕░р╣Ар╕лр╕ер╕╖р╕н: ${remainingAfterDelete} р╕гр╕▓р╕вр╕Бр╕▓р╕г`);
      
      if (remainingAfterDelete <= 204) {
        console.log('тЬЕ р╕Ир╕│р╕Щр╕зр╕Щр╕Ир╕░р╕ер╕Фр╕ер╕Зр╣Гр╕Бр╕ер╣Йр╣Ар╕Др╕╡р╕вр╕З 204 р╕гр╕▓р╕вр╕Бр╕▓р╕гр╣Бр╕ер╣Йр╕з!');
      } else {
        console.log(`тЪая╕П р╕вр╕▒р╕Зр╣Ар╕Бр╕┤р╕Щр╕нр╕вр╕╣р╣И ${remainingAfterDelete - 204} р╕гр╕▓р╕вр╕Бр╕▓р╕г`);
      }
    }
    
    // 2. р╕лр╕▓р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕бр╕╡ code pattern р╕Чр╕╡р╣Ир╣Бр╕Ыр╕ер╕Б
    const weirdCodeAssets = await prisma.asset.findMany({
      where: {
        OR: [
          { code: { contains: 'р╕Юр╕б/р╕Юр╕бр╕И-р╕Юр╕е/' } }, // pattern р╕Чр╕╡р╣Ир╕Фр╕╣р╣Бр╕Ыр╕ер╕Б
          { code: { contains: 'test' } },
          { code: { contains: 'Test' } }
        ]
      },
      select: {
        id: true,
        name: true,
        code: true
      }
    });
    
    console.log(`\nЁЯФН р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕бр╕╡ code pattern р╣Бр╕Ыр╕ер╕Б: ${weirdCodeAssets.length} р╕гр╕▓р╕вр╕Бр╕▓р╕г`);
    
  } catch (error) {
    console.error('тЭМ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф:', error);
  } finally {
    await prisma.$disconnect();
  }
}

findSuspiciousData();