const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function forceUpdateSteelCabinetImages() {
  try {
    console.log('üîÑ ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ï‡∏π‡πâ‡πÄ‡∏´‡∏•‡πá‡∏Å‡∏î‡πâ‡∏ß‡∏¢ URL ‡πÉ‡∏´‡∏°‡πà...');

    // URL ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ timestamp ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö cache refresh
    const timestamp = Date.now();
    const newImageUrl = `https://images.unsplash.com/photo-1586023492125-27b2c045efd7?w=400&h=300&fit=crop&t=${timestamp}`;

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏∏‡∏Å‡∏ï‡∏π‡πâ‡πÄ‡∏´‡∏•‡πá‡∏Å
    const result = await prisma.asset.updateMany({
      where: {
        name: {
          contains: '‡∏ï‡∏π‡πâ‡πÄ‡∏´‡∏•‡πá‡∏Å',
          mode: 'insensitive'
        }
      },
      data: {
        imageUrl: newImageUrl
      }
    });

    console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${result.count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    console.log(`üîó URL ‡πÉ‡∏´‡∏°‡πà: ${newImageUrl}`);

  } catch (error) {
    console.error('‚ùå Error:', error);
  } finally {
    await prisma.$disconnect();
  }
}

forceUpdateSteelCabinetImages();