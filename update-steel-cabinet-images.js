const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

// URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ï‡∏π‡πâ‡πÄ‡∏´‡∏•‡πá‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
const steelCabinetImageUrl = 'https://images.unsplash.com/photo-1586023492125-27b2c045efd7?w=400&h=300&fit=crop';

async function updateSteelCabinetImages() {
  try {
    console.log('üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "‡∏ï‡∏π‡πâ‡πÄ‡∏´‡∏•‡πá‡∏Å"...');

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ assets ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "‡∏ï‡∏π‡πâ‡πÄ‡∏´‡∏•‡πá‡∏Å" ‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠
    const steelCabinets = await prisma.asset.findMany({
      where: {
        name: {
          contains: '‡∏ï‡∏π‡πâ‡πÄ‡∏´‡∏•‡πá‡∏Å',
          mode: 'insensitive' // Case insensitive search
        }
      }
    });

    console.log(`‡∏û‡∏ö‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏ï‡∏π‡πâ‡πÄ‡∏´‡∏•‡πá‡∏Å: ${steelCabinets.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);

    if (steelCabinets.length === 0) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "‡∏ï‡∏π‡πâ‡πÄ‡∏´‡∏•‡πá‡∏Å"');
      return;
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    console.log('\nüìù ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï:');
    steelCabinets.forEach((asset, index) => {
      console.log(`${index + 1}. ${asset.name} (${asset.code})`);
    });

    console.log('\nüñºÔ∏è ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û...');

    let updated = 0;

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
    for (const asset of steelCabinets) {
      try {
        await prisma.asset.update({
          where: { id: asset.id },
          data: { imageUrl: steelCabinetImageUrl }
        });

        updated++;
        console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï: ${asset.name} (${asset.code})`);

      } catch (error) {
        console.error(`‚ùå Error updating asset ${asset.id}:`, error);
      }
    }

    console.log(`\nüéâ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ï‡∏π‡πâ‡πÄ‡∏´‡∏•‡πá‡∏Å‡πÅ‡∏•‡πâ‡∏ß ${updated}/${steelCabinets.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    const updatedAssets = await prisma.asset.findMany({
      where: {
        name: {
          contains: '‡∏ï‡∏π‡πâ‡πÄ‡∏´‡∏•‡πá‡∏Å',
          mode: 'insensitive'
        },
        imageUrl: steelCabinetImageUrl
      }
    });

    console.log(`‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô: ${updatedAssets.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏•‡πâ‡∏ß`);

  } catch (error) {
    console.error('‚ùå Error:', error);
  } finally {
    await prisma.$disconnect();
  }
}

updateSteelCabinetImages();